# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: build CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Check lint
        run: yarn lint

      - name: Run tests
        run: yarn test

  android:
    runs-on: ubuntu-latest
    # strategy:
    #   matrix:
    #     node: [18.x, 20.x, 22.x]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Set up Java and Android SDK
        uses: android-actions/setup-android@v2
        with:
          java-version: 17

      - name: Debug Java Version
        run: |
          echo "JAVA_HOME=$JAVA_HOME"
          java -version
          
      - uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Install dependencies
        run: yarn install

      - name: Build Android
        env:
          JAVA_HOME: /usr/bin/java
          PATH: $JAVA_HOME/bin:$PATH
        run: |
          cd android
          ./gradlew assembleRelease

  ios:
    runs-on: macos-latest
    # strategy:
    #   matrix:
    #     node: [18.x, 20.x, 22.x]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: yarn install
        
      - name: Cache cocoapods
        uses: actions/cache@v3
        with:
          path: /ios/Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - name: Build iOS
        env:
          APPLE_CERTIFICATE: ${{ secrets.APPLE_CERTIFICATE }}
        run: |
          cd ios
          xcodebuild \
            -workspace YourApp.xcworkspace \
            -scheme YourApp \
            -configuration Release \
            -sdk iphoneos \
            -archivePath build/YourApp.xcarchive \
            archive
