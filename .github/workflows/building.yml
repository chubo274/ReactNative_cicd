# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: build CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.9.1

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Check lint
        run: yarn lint

      - name: Run tests
        run: yarn test

  android:
    runs-on: ubuntu-latest
    # strategy:
    #   matrix:
    #     node: [18.x, 20.x, 22.x]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Set up Java and Android SDK
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Debug Java Version
        run: |
          echo "JAVA_HOME=$JAVA_HOME"
          java -version
          
      - uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Install dependencies
        run: yarn install

      - name: Build Android
        run: |
          cd android
          ./gradlew assembleRelease

      - name: Locate APK
        run: ls -R android/app/build/outputs/apk/release/
  
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release-apk
          path: android/app/build/outputs/apk/release/app-release.apk

  ios:
    runs-on: macos-latest
    # strategy:
    #   matrix:
    #     node: [18.x, 20.x, 22.x]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: |
          cd ios
          yarn install
          pod install
        
      - name: Cache cocoapods
        uses: actions/cache@v3
        with:
          path: /ios/Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - name: Set up ruby env
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2.1
          bundler-cache: true
 
      - name: Decode signing certificate into a file
        env:
         CERTIFICATE_BASE64: ${{ secrets.IOS_DIST_SIGNING_KEY }}
        run: |
         echo $CERTIFICATE_BASE64 | base64 --decode > signing-cert.p12
    
      - name: Build & upload iOS binary
        run: bundle exec fastlane ios build_upload_testflight
        env:
          ASC_KEY_ID: ${{ secrets.ASC_KEY_ID }}
          ASC_ISSUER_ID: ${{ secrets.ASC_ISSUER_ID }}
          ASC_KEY: ${{ secrets.ASC_PRIVATE_KEY }}
          SIGNING_KEY_PASSWORD: ${{ secrets.IOS_DIST_SIGNING_KEY_PASSWORD }}
          SIGNING_KEY_FILE_PATH: signing-cert.p12
 
      - name: Upload app-store ipa and dsyms to artifacts
        uses: actions/upload-artifact@v2
        with:
          name: app-store ipa & dsyms
          path: |
            ${{ github.workspace }}/example-iOS.ipa
            ${{ github.workspace }}/*.app.dSYM.zip
